/*! angular-stripe-js 2014-01-09 */
angular.module("vr.StripeJS",["vr.StripeJS.directives","vr.StripeJS.filters"]),angular.module("vr.StripeJS.filters",["vr.StripeJS.filters.validation","vr.StripeJS.filters.cardType"]),angular.module("vr.StripeJS.directives",["vr.StripeJS.directives.class","vr.StripeJS.directives.validation"]),angular.module("vr.StripeJS.service",[]).value("publishableKey","").run(["publishableKey",function(a){Stripe.setPublishableKey(a)}]).factory("StripeJS",function(){return{createToken:Stripe.card.createToken,validateCardNumber:Stripe.card.validateCardNumber,validateExpiry:Stripe.card.validateExpiry,validateCVC:Stripe.card.validateCVC,cardType:Stripe.card.cardType}}),angular.module("vr.StripeJS.directives.validation",["vr.StripeJS.directives.validation.number","vr.StripeJS.directives.validation.cvc","vr.StripeJS.directives.validation.expiration"]),angular.module("vr.StripeJS.directives.class",["vr.StripeJS.filters.cardType"]).directive("stripeClass",["$filter",function(a){return{restrict:"A",link:function(b,c,d){function e(b){var c=a("cardType")(b).toLowerCase();switch(c){case"american express":c="amex";break;case"mastercard":c="mc";break;case"diners club":c="diners"}return c}function f(a){""!=h&&c.removeClass(h),h="stripe-"+e(a),c.addClass(h)}function g(){return angular.isDefined(d.ngModel)?b.$eval(d.ngModel):d.stripeClass}var h="";b.$watch(g,function(a){f(a)})}}}]),angular.module("vr.StripeJS.directives.validation.cvc",["vr.StripeJS.filters.validation.cvc"]).directive("validateCvc",["$filter",function(a){return{restrict:"A",require:"ngModel",link:function(b,c,d,e){e.$parsers.unshift(function(b){var c=a("validCVC")(b);return e.$setValidity("cardCVC",c),c?b:void 0}),e.$formatters.unshift(function(b){return e.$setValidity("cardCVC",a("validCVC")(b)),b})}}}]),angular.module("vr.StripeJS.directives.validation.expiration",["vr.StripeJS.directives.validation.expiration.month","vr.StripeJS.directives.validation.expiration.year"]),angular.module("vr.StripeJS.directives.validation.expiration.service",[]).factory("stripeExpiration",function(){return{month:0,year:0}}),angular.module("vr.StripeJS.directives.validation.expiration.month",["vr.StripeJS.filters.validation.expiration","vr.StripeJS.directives.validation.expiration.service"]).directive("validateExpMonth",["$filter","stripeExpiration",function(a,b){return{restrict:"A",require:"ngModel",link:function(c,d,e,f){function g(c){b.month=c;var d=a("validExpiry")({month:c,year:b.year});return f.$setValidity("cardExpirationMonth",d),d}f.$parsers.unshift(function(a){return g(a)||"SELECT"==d.prop("tagName")?a:void 0}),f.$formatters.unshift(function(a){return g(a),a}),c.$watch(function(){return b.year},function(){f.$setViewValue(b.month)})}}}]),angular.module("vr.StripeJS.directives.validation.expiration.year",["vr.StripeJS.filters.validation.expiration","vr.StripeJS.directives.validation.expiration.service"]).directive("validateExpYear",["$filter","stripeExpiration",function(a,b){return{restrict:"A",require:"ngModel",link:function(c,d,e,f){function g(c){b.year=c;var d=a("validExpiry")({month:b.month,year:c});return f.$setValidity("cardExpirationYear",d),d}f.$parsers.unshift(function(a){return g(a)||"SELECT"==d.prop("tagName")?a:void 0}),f.$formatters.unshift(function(a){return g(a),a}),c.$watch(function(){return b.month},function(){f.$setViewValue(b.year)})}}}]),angular.module("vr.StripeJS.directives.validation.number",["vr.StripeJS.filters.validation.number"]).directive("validateCardNumber",["$filter",function(a){return{restrict:"A",require:"ngModel",link:function(b,c,d,e){e.$parsers.unshift(function(b){var c=a("validCardNumber")(b);return e.$setValidity("cardNumber",c),c?b:void 0}),e.$formatters.unshift(function(b){return e.$setValidity("cardNumber",a("validCardNumber")(b)),b})}}}]),angular.module("vr.StripeJS.filters.validation",["vr.StripeJS.filters.validation.number","vr.StripeJS.filters.validation.cvc","vr.StripeJS.filters.validation.expiration"]),angular.module("vr.StripeJS.filters.cardType",["vr.StripeJS.service"]).filter("cardType",["StripeJS",function(a){return function(b){return b?a.cardType(b):"Unknown"}}]),angular.module("vr.StripeJS.filters.validation.cvc",["vr.StripeJS.service"]).filter("validCVC",["StripeJS",function(a){return function(b){return a.validateCVC(b)}}]),angular.module("vr.StripeJS.filters.validation.expiration",["vr.StripeJS.service"]).filter("validExpiry",["StripeJS",function(a){function b(a){var b=[0,0];return a>9999?(b[0]=Math.floor(a/1e4),b[1]=a-1e4*b[0]):(b[0]=Math.floor(a/100),b[1]=a-100*b[0]),b}return function(c){var d=0,e=0,f=[];return angular.isArray(c)?(d=parseInt(c[0]),e=parseInt(c[1])):angular.isObject(c)?(d=parseInt(c.month),e=parseInt(c.year)):angular.isString(c)?(f=c.indexOf("-")>0?c.split("-"):c.indexOf("/")>0?c.split("/"):b(parseInt(c)),d=parseInt(f[0]),e=parseInt(f[1])):angular.isNumber(c)&&(f=b(c),d=f[0],e=f[1]),100>e&&(e+=2e3),a.validateExpiry(d,e)}}]),angular.module("vr.StripeJS.filters.validation.number",["vr.StripeJS.service"]).filter("validCardNumber",["StripeJS",function(a){return function(b){return a.validateCardNumber(b)}}]);